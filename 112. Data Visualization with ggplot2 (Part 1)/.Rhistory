library(ggplot2)
str(mtcars)
ggplot(mtcars, aes(x = cyl, y = mpg)) +
geom_point()
library(ggplot2)
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_point()
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point()
ggplot(mtcars, aes(x = wt, y = mpg, col = disp)) +
geom_point()
ggplot(mtcars, aes(x = wt, y = mpg, size = disp)) +
geom_point()
ggplot(mtcars, aes(x = wt, y = mpg, shape = disp)) +
geom_point()
str(diamonds)
library(dplyr)
glimpse(diamonds)
levels(diamonds$color)
ggplot(diamonds, aes(x = carat, y = price)) + geom_point()
dim(diamonds)
ggplot(diamonds, aes(x = carat, y = price)) + geom_point() + geom_smooth()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point() +
geom_smooth()
# Load the ggplot2 package
library(ggplot2)
# Explore the mtcars data frame with str()
str(mtcars)
# Execute the following command
ggplot(mtcars, aes(x = cyl, y = mpg)) +
geom_point()
ggplot(mtcars, aes(x = cyl, y = mpg)) +
geom_point()
str(mtcars)
# Load the ggplot2 package
library(ggplot2)
# Explore the mtcars data frame with str()
str(mtcars)
# Execute the following command
ggplot(mtcars, aes(x = cyl, y = mpg)) +
geom_point()
library(ggplot2)
# Change the command below so that cyl is treated as factor
ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +
geom_point()
# A scatter plot has been made for you
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point()
# Replace ___ with the correct vector
ggplot(mtcars, aes(x = wt, y = mpg, col = disp)) +
geom_point()
# Replace ___ with the correct vector
ggplot(mtcars, aes(x = wt, y = mpg, size = disp)) +
geom_point()
ggplot(mtcars, aes(x = wt, y = mpg, shape = disp)) +
geom_point()
str(diamonds)
# Add geom_point() with +
ggplot(diamonds, aes(x = carat, y = price)) + geom_point()
# Add geom_point() and geom_smooth() with +
ggplot(diamonds, aes(x = carat, y = price)) + geom_point() + geom_smooth()
# 1 - The plot you created in the previous exercise
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point() +
geom_smooth()
# 2 - Copy the above command but show only the smooth line
ggplot(diamonds, aes(x = carat, y = price)) +
geom_smooth()
# 3 - Copy the above command and assign the correct value to col in aes()
ggplot(diamonds, aes(x = carat, y = price, color=clarity)) +
geom_smooth()
# 4 - Keep the color settings from previous command. Plot only the points with argument alpha.
ggplot(diamonds, aes(x = carat, y = price, col=clarity)) +
geom_point(alpha=0.4)
dia_plot <- ggplot(diamonds, aes(x = carat, y = price))
# Add a geom layer with + and geom_point()
dia_plot + geom_point()
# Add the same geom layer, but with aes() inside
dia_plot + geom_point(aes(color = clarity))
dia_plot <- ggplot(diamonds, aes(x = carat, y = price))
# 2 - Expand dia_plot by adding geom_point() with alpha set to 0.2
dia_plot <- dia_plot + geom_point(alpha=0.2)
# 3 - Plot dia_plot with additional geom_smooth() with se set to FALSE
dia_plot + geom_smooth(se = FALSE)
# 4 - Copy the command from above and add aes() with the correct mapping to geom_smooth()
dia_plot + geom_smooth(aes(col = clarity), se = FALSE)
d <- read.delim("clipboard")
head(d)
i <- read.delim("clipboard")
head(i)
i$diff <- i$Sunrise - i$Fajr
str(i)
i$Fajr <- as.numeric(i$Fajr)
i$Sunrise <- as.numeric(i$Sunrise)
i$diff <- i$Sunrise - i$Fajr
i$diff
head(i)
i <- read.delim("clipboard")
as.numeric(i$Fajr)
white <- read.csv(("http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-white.csv", sep=';')
white <- read.csv("http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-white.csv", sep=';')
head(white)
red <- read.csv("http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", sep=';')
head(red)
